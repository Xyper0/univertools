{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\Desktop\\\\balancedapp\\\\src\\\\components\\\\theme.js\";\nimport { MdDarkMode, MdLightMode } from \"react-icons/md\";\nimport '../stylesheet/compsStyle/theme.css';\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Theme() {\n  // const [theme,setTheme] = useState('light'); \n\n  var BodySelector = document.querySelector(\"body\");\n  const setThemeDark = () => {\n    BodySelector.setAttribute('data-theme', 'dark');\n    localStorage.setItem(\"selectedTheme\", \"dark\");\n    setTheme('dark');\n  };\n  const setThemeLight = () => {\n    BodySelector.setAttribute('data-theme', 'light');\n    localStorage.setItem(\"selectedTheme\", \"light\");\n    setTheme('light');\n  };\n  const selectedTheme = localStorage.getItem('selectedTheme');\n  if (selectedTheme === \"dark\") {\n    setThemeDark();\n  }\n  const toggleTheme = e => {\n    if (BodySelector.getAttribute('data-theme') === \"dark\") setThemeLight();else if (BodySelector.getAttribute('data-theme') === \"light\") setThemeDark();\n  };\n\n  // function ThemeNow() {\n  //     if(theme === \"dark\") return <MdDarkMode/>\n  //     else if(theme === \"light\") return <MdLightMode/>\n  // }\n\n  // var thenow = ThemeNow();\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"theme\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        defaultChecked: selectedTheme === \"dark\",\n        onClick: toggleTheme,\n        children: () => {}\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_c = Theme;\n;\nvar _c;\n$RefreshReg$(_c, \"Theme\");","map":{"version":3,"names":["MdDarkMode","MdLightMode","useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Theme","BodySelector","document","querySelector","setThemeDark","setAttribute","localStorage","setItem","setTheme","setThemeLight","selectedTheme","getItem","toggleTheme","e","getAttribute","children","className","defaultChecked","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/lenovo/Desktop/balancedapp/src/components/theme.js"],"sourcesContent":["import { MdDarkMode , MdLightMode } from \"react-icons/md\";\r\n\r\n\r\nimport '../stylesheet/compsStyle/theme.css'; \r\nimport { useEffect, useState } from \"react\";\r\n\r\n\r\n\r\nexport default function Theme () {\r\n\r\n    // const [theme,setTheme] = useState('light'); \r\n\r\nvar BodySelector = document.querySelector(\"body\"); \r\n    const setThemeDark  = () => {\r\n        BodySelector.setAttribute('data-theme' , 'dark'); \r\n        localStorage.setItem(\"selectedTheme\" , \"dark\");\r\n        setTheme('dark'); \r\n    }\r\n    \r\n    const setThemeLight  = () => {\r\n        BodySelector.setAttribute('data-theme' , 'light');\r\n        localStorage.setItem(\"selectedTheme\" , \"light\"); \r\n        setTheme('light'); \r\n\r\n    }\r\n\r\n    const selectedTheme = localStorage.getItem('selectedTheme'); \r\n    if(selectedTheme === \"dark\") {\r\n        setThemeDark(); \r\n    }\r\n\r\n    const toggleTheme = e => {\r\n        if(BodySelector.getAttribute('data-theme') === \"dark\") setThemeLight();\r\n        else if(BodySelector.getAttribute('data-theme') === \"light\") setThemeDark();\r\n    }\r\n\r\n    // function ThemeNow() {\r\n    //     if(theme === \"dark\") return <MdDarkMode/>\r\n    //     else if(theme === \"light\") return <MdLightMode/>\r\n    // }\r\n\r\n    // var thenow = ThemeNow();\r\n\r\n    return (\r\n        <>\r\n        <div className='theme'>\r\n          <button defaultChecked={selectedTheme === \"dark\"} onClick={toggleTheme}>\r\n                {() => {\r\n                   \r\n                }}\r\n          </button>\r\n        </div>\r\n        </>\r\n    )\r\n}; "],"mappings":";AAAA,SAASA,UAAU,EAAGC,WAAW,QAAQ,gBAAgB;AAGzD,OAAO,oCAAoC;AAC3C,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAI5C,eAAe,SAASC,KAAKA,CAAA,EAAI;EAE7B;;EAEJ,IAAIC,YAAY,GAAGC,QAAQ,CAACC,aAAa,CAAC,MAAM,CAAC;EAC7C,MAAMC,YAAY,GAAIA,CAAA,KAAM;IACxBH,YAAY,CAACI,YAAY,CAAC,YAAY,EAAG,MAAM,CAAC;IAChDC,YAAY,CAACC,OAAO,CAAC,eAAe,EAAG,MAAM,CAAC;IAC9CC,QAAQ,CAAC,MAAM,CAAC;EACpB,CAAC;EAED,MAAMC,aAAa,GAAIA,CAAA,KAAM;IACzBR,YAAY,CAACI,YAAY,CAAC,YAAY,EAAG,OAAO,CAAC;IACjDC,YAAY,CAACC,OAAO,CAAC,eAAe,EAAG,OAAO,CAAC;IAC/CC,QAAQ,CAAC,OAAO,CAAC;EAErB,CAAC;EAED,MAAME,aAAa,GAAGJ,YAAY,CAACK,OAAO,CAAC,eAAe,CAAC;EAC3D,IAAGD,aAAa,KAAK,MAAM,EAAE;IACzBN,YAAY,CAAC,CAAC;EAClB;EAEA,MAAMQ,WAAW,GAAGC,CAAC,IAAI;IACrB,IAAGZ,YAAY,CAACa,YAAY,CAAC,YAAY,CAAC,KAAK,MAAM,EAAEL,aAAa,CAAC,CAAC,CAAC,KAClE,IAAGR,YAAY,CAACa,YAAY,CAAC,YAAY,CAAC,KAAK,OAAO,EAAEV,YAAY,CAAC,CAAC;EAC/E,CAAC;;EAED;EACA;EACA;EACA;;EAEA;;EAEA,oBACIP,OAAA,CAAAE,SAAA;IAAAgB,QAAA,eACAlB,OAAA;MAAKmB,SAAS,EAAC,OAAO;MAAAD,QAAA,eACpBlB,OAAA;QAAQoB,cAAc,EAAEP,aAAa,KAAK,MAAO;QAACQ,OAAO,EAAEN,WAAY;QAAAG,QAAA,EAChEA,CAAA,KAAM,CAEP;MAAC;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN;EAAC,gBACJ,CAAC;AAEX;AAACC,EAAA,GA9CuBvB,KAAK;AA8C5B;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}