{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\Desktop\\\\balancedapp\\\\src\\\\components\\\\theme.js\",\n  _s = $RefreshSig$();\nimport { MdDarkMode, MdLightMode } from \"react-icons/md\";\nimport '../stylesheet/compsStyle/theme.css';\nimport { useEffect, useState } from \"react\";\nimport Switch from '@mui/joy/Switch';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Theme() {\n  _s();\n  const [theme, setTheme] = useState('light');\n  const [themeIcon, setThemeIcon] = useState( /*#__PURE__*/_jsxDEV(MdLightMode, {\n    color: \"white\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 48\n  }, this));\n  const BodySelector = document.querySelector(\"body\");\n  useEffect(() => {\n    const selectedTheme = localStorage.getItem('selectedTheme');\n    if (selectedTheme === \"dark\") {\n      setTheme('dark');\n      setThemeIcon( /*#__PURE__*/_jsxDEV(MdDarkMode, {\n        color: \"black\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 26\n      }, this));\n      BodySelector.setAttribute('data-theme', 'dark');\n    } else {\n      setTheme('light');\n      setThemeIcon( /*#__PURE__*/_jsxDEV(MdLightMode, {\n        color: \"white\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 26\n      }, this));\n      BodySelector.setAttribute('data-theme', 'light');\n    }\n  }, [BodySelector]);\n  const toggleTheme = () => {\n    if (theme === \"dark\") {\n      localStorage.setItem(\"selectedTheme\", \"light\");\n      setTheme('light');\n      setThemeIcon( /*#__PURE__*/_jsxDEV(MdLightMode, {\n        color: \"white\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 26\n      }, this));\n      BodySelector.setAttribute('data-theme', 'light');\n    } else {\n      localStorage.setItem(\"selectedTheme\", \"dark\");\n      setTheme('dark');\n      setThemeIcon( /*#__PURE__*/_jsxDEV(MdDarkMode, {\n        color: \"black\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 26\n      }, this));\n      BodySelector.setAttribute('data-theme', 'dark');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"theme_div\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"theme-transition\",\n        onClick: toggleTheme,\n        children: themeIcon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        size: \"lg\",\n        slotProps: {\n          input\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_s(Theme, \"UwmxxJItDcPHv+9sAc/aC6jn3mc=\");\n_c = Theme;\n;\nvar _c;\n$RefreshReg$(_c, \"Theme\");","map":{"version":3,"names":["MdDarkMode","MdLightMode","useEffect","useState","Switch","jsxDEV","_jsxDEV","Fragment","_Fragment","Theme","_s","theme","setTheme","themeIcon","setThemeIcon","color","fileName","_jsxFileName","lineNumber","columnNumber","BodySelector","document","querySelector","selectedTheme","localStorage","getItem","setAttribute","toggleTheme","setItem","children","className","onClick","size","slotProps","input","_c","$RefreshReg$"],"sources":["C:/Users/lenovo/Desktop/balancedapp/src/components/theme.js"],"sourcesContent":["import { MdDarkMode, MdLightMode } from \"react-icons/md\";\r\nimport '../stylesheet/compsStyle/theme.css'; \r\nimport { useEffect, useState } from \"react\";\r\nimport Switch from '@mui/joy/Switch';\r\n\r\nexport default function Theme () {\r\n    const [theme, setTheme] = useState('light'); \r\n    const [themeIcon, setThemeIcon] = useState(<MdLightMode color=\"white\" />);\r\n    const BodySelector = document.querySelector(\"body\"); \r\n\r\n    useEffect(() => {\r\n        const selectedTheme = localStorage.getItem('selectedTheme');\r\n        if(selectedTheme === \"dark\") {\r\n            setTheme('dark'); \r\n            setThemeIcon(<MdDarkMode color=\"black\" />);\r\n            BodySelector.setAttribute('data-theme' , 'dark');\r\n        } else {\r\n            setTheme('light');\r\n            setThemeIcon(<MdLightMode  color=\"white\" />); \r\n            BodySelector.setAttribute('data-theme' , 'light');\r\n        }\r\n    }, [BodySelector]);\r\n\r\n    const toggleTheme = () => {\r\n        if(theme === \"dark\") {\r\n            localStorage.setItem(\"selectedTheme\" , \"light\");\r\n            setTheme('light');\r\n            setThemeIcon(<MdLightMode  color=\"white\" />); \r\n            BodySelector.setAttribute('data-theme' , 'light');\r\n        } else {\r\n            localStorage.setItem(\"selectedTheme\" , \"dark\");\r\n            setTheme('dark');\r\n            setThemeIcon(<MdDarkMode  color=\"black\" />);\r\n            BodySelector.setAttribute('data-theme' , 'dark');\r\n           \r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <div className='theme_div'>\r\n            <button className=\"theme-transition\"  onClick={toggleTheme}>\r\n            {themeIcon}\r\n          </button>          \r\n          <Switch size=\"lg\" slotProps={{\r\n            input\r\n          }}/>\r\n        </div>\r\n        </>\r\n    )\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}